{"version":3,"sources":["libs/http.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Modal/index.jsx","components/Modal/Modal.module.scss","components/CreatePost/CreatePost.module.scss","components/CreatePost/index.jsx","pages/NewPost/index.jsx"],"names":["BASE_URL","http","resource","fetch","then","response","json","httpPOST","data","method","headers","body","JSON","stringify","httpDELETE","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Modal","props","result","value","className","styles","modal","style","background","module","exports","CreatePost","useState","authorInput","setAuthorInput","imgInput","setImgInput","messageInput","setMessageInput","formPostObj","setFormPostObj","isModalShown","setModalShown","useEffect","author","text","date","Date","toISOString","photo","createPost","__author","onChange","e","target","name","id","type","placeholder","required","onClick","event","preventDefault","cols","rows","NewPost"],"mappings":"+NAAMA,EAAW,yCAEXC,EAAO,SAACC,GAAD,OACXC,MAAMH,EAAWE,GAAUE,MAAK,SAACC,GAAD,OAAcA,EAASC,WAEnDC,EAAW,SAACL,EAAUM,GAAX,OACfL,MAAMH,EAAWE,EAAU,CACzBO,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,KACpBJ,MAAK,SAACC,GAAD,OAAcA,EAASC,WAE3BQ,EAAa,SAACZ,GAAD,OACjBC,MAAMH,EAAWE,EAAU,CACzBO,OAAQ,SACRC,QAAS,CACP,eAAgB,sBAEjBN,MAAK,SAACC,GAAD,OAAcA,EAASC,Y,wFChBlB,SAASS,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,gCIL9F,8DAEMC,EAAQ,SAACC,GACZ,IAAIC,EAAS,GAOZ,MALoB,QAAhBD,EAAME,QACND,EAAS,6BACS,YAAhBD,EAAME,QACRD,EAAS,2BAGT,qBAAKE,UAAWC,IAAOC,MAAOC,MAAO,CAACC,WAAYP,EAAME,OAAxD,SACI,4BAAID,Q,mBCXhBO,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,SAAW,+B,iGCyE1DC,EArEI,WACjB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAsCN,mBAAS,IAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAsCR,oBAAS,GAA/C,mBAAOS,EAAP,KAAqBC,EAArB,KAiBA,OATAC,qBAAU,WACRH,EAAe,CACbI,OAAQX,EACRY,KAAMR,EACNS,MAAM,IAAIC,MAAOC,cACjBC,MAAOd,MAER,CAACF,EAAaE,EAAUE,IAGzB,qBAAKb,UAAWC,IAAOyB,WAAvB,SACE,iCACE,sBAAK1B,UAAWC,IAAO0B,SAAvB,UACE,uBACE5B,MAAOU,EACPmB,SAAU,SAACC,GAAD,OAAOnB,EAAemB,EAAEC,OAAO/B,QACzCgC,KAAK,SACLC,GAAG,SACHC,KAAK,OACLC,YAAY,SACZC,UAAQ,IAGV,uBACEP,SAAU,SAACC,GAAD,OAAOjB,EAAYiB,EAAEC,OAAO/B,QACtCA,MAAOY,EACPoB,KAAK,MACLC,GAAG,MACHC,KAAK,OACLC,YAAY,YAGd,wBAAQD,KAAK,SAASG,QAtCR,SAACC,GACrBA,EAAMC,iBACN9D,YAAS,SAAUuC,GACnBG,GAAeD,IAmCT,kBAGCA,GAAgB,cAACrB,EAAA,EAAD,CAAOG,MAAM,eAIhC,0BACEA,MAAOc,EACPe,SAAU,SAACC,GAAD,OAAOf,EAAgBe,EAAEC,OAAO/B,QAC1CgC,KAAK,UACLC,GAAG,UACHO,KAAK,KACLC,KAAK,KACLN,YAAY,UACZC,UAAQ,UC3DHM,UAJC,WACd,OAAO,cAAC,EAAD","file":"static/js/new-post.ab2cf8ec.chunk.js","sourcesContent":["const BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) =>\n  fetch(BASE_URL + resource).then((response) => response.json());\n\nconst httpPOST = (resource, data) =>\n  fetch(BASE_URL + resource, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => response.json());\n\nconst httpDELETE = (resource) =>\n  fetch(BASE_URL + resource, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n// Popola la lista degli amici, in base alla lista friendsNames\nconst fillFriendsList = (friendsNames) => {\n  let value = 0;\n  for (value in [...Array(friendsNames.length).keys()]) {\n    httpPOST(\"/friends\", {\n      name: friendsNames[value],\n      photo: `https://randomuser.me/api/portraits/men/${value}.jpg`,\n    });\n\n    setTimeout(() => {}, 100);\n  }\n};\n\nexport { http, httpPOST, httpDELETE, fillFriendsList };","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styles from \"./Modal.module.scss\";\n// const [show, setShow] = useState (false)\nconst Modal = (props) => {\n   let result = \"\";\n\n    if (props.value === \"red\") {\n        result = \"Post successfully deleted\";\n    } if (props.value === \"#3fc0eb\") {\n        result = \"Post successfully Added\"\n    }\n    return (\n        <div className={styles.modal} style={{background: props.value}}>\n            <p>{result}</p>\n        </div>\n    )\n\n\n}\n\n\nexport {Modal} ;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__1vwov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createPost\":\"CreatePost_createPost__3XCbM\",\"__author\":\"CreatePost___author__2lcbm\"};","import { useState, useEffect } from \"react\";\nimport { httpPOST } from \"../../libs/http\";\nimport { Modal } from \"../Modal\";\nimport styles from \"./CreatePost.module.scss\";\n\nconst CreatePost = () => {\n  const [authorInput, setAuthorInput] = useState(\"\");\n  const [imgInput, setImgInput] = useState(\"\");\n  const [messageInput, setMessageInput] = useState(\"\");\n  const [formPostObj, setFormPostObj] = useState({});\n  const [isModalShown, setModalShown] = useState(false);\n\n  const handleSendBtn = (event) => {\n    event.preventDefault();\n    httpPOST(\"/posts\", formPostObj);\n    setModalShown(!isModalShown);\n  };\n\n  useEffect(() => {\n    setFormPostObj({\n      author: authorInput,\n      text: messageInput,\n      date: new Date().toISOString(),\n      photo: imgInput,\n    });\n  }, [authorInput, imgInput, messageInput]);\n\n  return (\n    <div className={styles.createPost}>\n      <form>\n        <div className={styles.__author}>\n          <input\n            value={authorInput}\n            onChange={(e) => setAuthorInput(e.target.value)}\n            name=\"author\"\n            id=\"author\"\n            type=\"text\"\n            placeholder=\"Author\"\n            required\n          />\n\n          <input\n            onChange={(e) => setImgInput(e.target.value)}\n            value={imgInput}\n            name=\"img\"\n            id=\"img\"\n            type=\"text\"\n            placeholder=\"Img URL\"\n          />\n\n          <button type=\"submit\" onClick={handleSendBtn} >\n            SEND\n          </button> \n          {isModalShown && <Modal value=\"#3fc0eb\" /> }\n\n        </div>\n\n        <textarea\n          value={messageInput}\n          onChange={(e) => setMessageInput(e.target.value)}\n          name=\"message\"\n          id=\"message\"\n          cols=\"30\"\n          rows=\"10\"\n          placeholder=\"Message\"\n          required\n        ></textarea>\n      </form>\n    </div>\n  );\n};\n\n\n\nexport default CreatePost;","import CreatePost from \"../../components/CreatePost\";\n\nconst NewPost = () => {\n  return <CreatePost />;\n};\n\nexport default NewPost;"],"sourceRoot":""}