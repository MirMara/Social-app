{"version":3,"sources":["libs/http.js","components/FriendPreview/index.jsx","components/FriendPreview/FriendPreview.module.scss","components/Modal/index.jsx","components/Modal/Modal.module.scss","components/MessagePreview/MessagePreview.module.scss","components/Post/Post.module.scss","pages/Home/home.module.scss","components/Time/index.jsx","components/MessagePreview/index.jsx","components/Post/index.jsx","pages/Home/index.jsx"],"names":["BASE_URL","http","resource","fetch","then","response","json","httpPOST","data","method","headers","body","JSON","stringify","httpDELETE","FriendPreview","props","name","photo","className","styles","friend","src","alt","module","exports","Modal","result","value","modal","style","background","Time","formatRelative","Date","relative","addSuffix","locale","it","MessagePreview","text","date","sender","message","Post","author","useState","isModalShown","setModalShown","post","onClick","id","window","location","href","deleteBtn","friends","messages","posts","Home","friendsPreview","setFriendsPreview","allPosts","setAllPosts","messagesPreview","setMessagesPreview","useEffect","reverse","home","grid","map","index","to","createPostBtn"],"mappings":"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","file":"static/js/home.e9e4362a.chunk.js","sourcesContent":["const BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) =>\n  fetch(BASE_URL + resource).then((response) => response.json());\n\nconst httpPOST = (resource, data) =>\n  fetch(BASE_URL + resource, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => response.json());\n\nconst httpDELETE = (resource) =>\n  fetch(BASE_URL + resource, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n// Popola la lista degli amici, in base alla lista friendsNames\nconst fillFriendsList = (friendsNames) => {\n  let value = 0;\n  for (value in [...Array(friendsNames.length).keys()]) {\n    httpPOST(\"/friends\", {\n      name: friendsNames[value],\n      photo: `https://randomuser.me/api/portraits/men/${value}.jpg`,\n    });\n\n    setTimeout(() => {}, 100);\n  }\n};\n\nexport { http, httpPOST, httpDELETE, fillFriendsList };","import styles from \"./FriendPreview.module.scss\";\n\nconst FriendPreview = (props) => {\n    const data = props.data || {\n        name: \"Friend\", \n        photo: \"\",\n    };\n\n    return (\n        <div className={styles.friend}>\n            <p>{data.name}</p>\n            <img src={data.photo} alt={data.name} />\n        </div>\n    );\n};\n\nexport { FriendPreview};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"FriendPreview_friend__3Gjby\"};","import styles from \"./Modal.module.scss\";\n// const [show, setShow] = useState (false)\nconst Modal = (props) => {\n   let result = \"\";\n\n    if (props.value === \"red\") {\n        result = \"Post successfully deleted\";\n    } if (props.value === \"#3fc0eb\") {\n        result = \"Post successfully Added\"\n    }\n    return (\n        <div className={styles.modal} style={{background: props.value}}>\n            <p>{result}</p>\n        </div>\n    )\n\n\n}\n\n\nexport {Modal} ;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__1vwov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessagePreview_message__3j9dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3hqZB\",\"deleteBtn\":\"Post_deleteBtn__1bIB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home_home__wf-cy\",\"grid\":\"home_grid__1UMcp\",\"createPostBtn\":\"home_createPostBtn__1jJ26\",\"friend\":\"home_friend__1tD-b\"};","import { formatRelative } from \"date-fns\";\nimport { it } from \"date-fns/locale\";\n\nconst Time = (props) => {\n    return (\n        <>\n        {formatRelative(new Date(props.relative),\n        new Date(), {addSuffix: true, locale:it})}\n        \n        </>\n    );\n};\n\n\n\nexport {Time};","/*import { formatDistance } from \"date-fns\";\nimport { it } from \"date-fns/locale\";*/\nimport {Time} from \"../../components/Time\";\nimport styles from \"./MessagePreview.module.scss\";\n//console.log(formatDistance);\n\nconst MessagePreview = (props) => {\n  const data = props.data || {\n    text: \"lorem Ipsum\",\n    date: new Date(),\n    sender: \"User\",\n  };\n\n  return (\n    <div className={styles.message}>\n      <h5>{data.sender}</h5>\n      <p>\n        <small>\n       <Time relative={data.date} />\n        </small>\n      </p>\n      <p>{data.text}</p>\n    </div>\n  );\n};\n\nexport { MessagePreview };\n","/*import { formatDistance } from \"date-fns\";\nimport { it } from \"date-fns/locale\";*/\nimport {Time} from \"../../components/Time\";\nimport styles from \"./Post.module.scss\";\nimport { httpDELETE } from \"../../libs/http\";\nimport { Modal} from \"../Modal\";\nimport { useState } from \"react\";\n\nconst Post = (props) => {\n  \n  const data =  props.data || {\n    author: \"User\",\n    text: \"text\",\n    date: new Date(),\n    photo:\n      \"https://images.unsplash.com/photo-1639512398860-be15f48100ea?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1024&q=80\",\n  };\n\n  const [isModalShown, setModalShown] = useState(false);\n\n   const handleDeletePost = () => {\n     httpDELETE(`/posts/${props.data.id}`).then(() => {});\n     setModalShown(!isModalShown);\n    window.location.href = \"/\";\n   };\n\n\n  return (\n    <article className={styles.post}>\n       <button onClick={handleDeletePost} className={styles.deleteBtn}>\n        X\n      </button> \n      {isModalShown && <Modal value=\"red\" /> }\n     \n      <h3>{data.author}</h3>\n      <p>\n        <small>\n       \n        {data.date ? <Time relative= {data.date} /> : <></>}\n        </small>\n      </p>\n      <p>{data.text}</p>\n\n      {data.photo ? <img src={data.photo} alt={data.author} /> : <></>}\n    </article>\n  );\n};\n\nexport { Post };\n","import { useState, useEffect } from \"react\";\nimport { FriendPreview } from \"../../components/FriendPreview\";\nimport { MessagePreview } from \"../../components/MessagePreview\";\nimport { Post } from \"../../components/Post\";\nimport { http } from \"./../../libs/http\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./home.module.scss\";\n\nconst friends = [];\n\nconst messages = [];\n\nconst posts = [];\n\nconst Home = () => {\n  const [friendsPreview, setFriendsPreview] = useState(friends);\n  const [allPosts, setAllPosts] = useState(posts);\n  const [messagesPreview, setMessagesPreview] = useState(messages);\n\n  // GETTER -> const friendPreview = [];\n  // SETTER -> friendPreview = [...]\n\n  // Esegui del codice quando il componente Ã¨ inizializzato (montato in pagina)\n  // componentDidMount() --> simile a \"DOMContentLoaded\" ma solo per il componente\n  useEffect(() => {\n    // fetch(\"https://edgemony-backend.herokuapp.com/friends?_limit=4\")\n    //   .then((response) => response.json())\n    //   .then((data) => setFriendsPreview(data));\n\n    http(\"/friends?_limit=4\").then((data) => setFriendsPreview(data));\n    http(\"/messages?_limit=4\").then((data) => setMessagesPreview(data));\n    http(\"/posts\").then((data) => setAllPosts(data.reverse()));\n\n    // Promise.all([\n    //   http(\"/friends?_limit=4\"),\n    //   http(\"/messages?_limit=4\"),\n    //   http(\"/posts\")\n    // ]).then((data) => console.log(data[0]))\n  }, []);\n\n  return (\n    <section className={styles.home}>\n      <h3>Bevenuto utente</h3>\n      <div className={styles.grid}>\n        <aside>\n          {friendsPreview.map((friend, index) => (\n            <FriendPreview key={index} data={friend} />\n          ))}\n        </aside>\n        <main>\n          <Link to=\"/new-post\">\n            <button className={styles.createPostBtn}>\n              + Create a new post!\n            </button>\n          </Link>\n          {allPosts.map((post, index) => (\n            <Post key={index} data={post} />\n          ))}\n        </main>\n        <aside>\n          {messagesPreview.map((message, index) => (\n            <MessagePreview key={index} data={message} />\n          ))}\n        </aside>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;"],"sourceRoot":""}